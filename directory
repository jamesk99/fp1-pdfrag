FP1-PDFRAG/
├─ .venv/                        # Python virtual environment and various dependencies
├─ .gitignore                   # Files and directories to ignore in Git 
├─ README.md                    # Project overview and instructions
├─ requirements.txt             # Dependencies
├─ .vs/                         # Visual Studio Code settings
├─ .git/                        # Git repository metadata
├─ directory                    # Project Directory Structure
├─ .ipynb_checkpoints/          # Jupyter Notebook checkpoints

├─ config/
│  ├─ __init__.py               # Configuration package initialization
│  ├─ settings.py               # Central configuration management

├─ RAG System/                  # Working Files for RAG System Project                      
│  ├─ Research                  # 
│  ├─                           # 
│  ├─                           # 
│  ├─                           # 
│  ├─                           # 


├─ Data/
│  ├─ raw/                      # Original PDFs or other source files (7 pdf files)
│  ├─ processed/                # Cleaned text or intermediate formats
│  ├─ embeddings/               # Stored vector embeddings
│  └─ metadata/                 # Any associated metadata

├─ ingestion/
│  ├─ __init__.py
│  ├─ document_loader.py        # Handles loading PDFs or other docs
│  ├─ pdf_parser.py             # Extracts text from PDFs
│  ├─ text_cleaner.py           # Normalizes and preprocesses text

├─ indexing/
│  ├─ __init__.py
│  ├─ embeddings.py             # Embedding generation logic
│  ├─ vectorstore.py            # Vector database interaction
│  └─ retriever.py              # Retrieval logic for querying the vector DB

├─ models/
│  ├─ __init__.py
│  ├─ local_llm.py              # Integration with local LLM(s)
│  ├─ prompt_engineering.py     # Prompt templates and refinements
│  └─ inference.py              # Orchestrates model inference calls

├─ query/
│  ├─ __init__.py
│  ├─ query_processor.py        # High-level query handling
│  ├─ context_retriever.py      # Uses retriever to get relevant context
│  └─ response_formatter.py     # Formats the final LLM output

├─ app/
│  ├─ __init__.py
│  ├─ main.py                   # Application entry point
│  ├─ api.py                    # API endpoints (e.g., REST, GraphQL)
│  └─ ui/
│     ├─ __init__.py
│     └─ components.py          # UI components if applicable (web front-end)

├─ system_tests/               # End-to-end tests
   ├─ __init__.py             # Test suite initialization
   ├─ test_ingestion.py      # Tests for ingestion pipeline
   ├─ test_indexing.py  
   ├─ test_query.py
   ├─ test_models.py
   ├─ test_app.py
   ├─ tests.py   
   ├─ tests.py
   └─ notebooks/              # Jupyter notebooks for testing and exploration
      ├─ .ipynb
      ├─ .ipynb            
      ├─ 
      └─  
└─
